package com.te.fileuploaddownload.service;

import java.io.IOException;
import java.util.Optional;

import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartFile;

import com.te.fileuploaddownload.entity.ImageData;
import com.te.fileuploaddownload.repository.StorageRepository;
import com.te.fileuploaddownload.utils.ImageUtils;

import lombok.RequiredArgsConstructor;

@RequiredArgsConstructor
@Service
public class StorageService {

	private final StorageRepository storageRepository;

	public String uploadImage(MultipartFile multipartFile) throws IOException {
		ImageData imageData = storageRepository
				.save(ImageData.builder().imageName(multipartFile.getName()).imageType(multipartFile.getContentType())
						.imageData(ImageUtils.compressImage(multipartFile.getBytes())).build());
		if (imageData != null) {
			return "File uploaded successfully :" + multipartFile.getOriginalFilename();
		} else {
			return "File not uploaded!!!!";
		}
	}

	public byte[] downloadImage(String fileName) {
		Optional<ImageData> imageData = storageRepository.findByImageData(fileName);
		if (imageData.isPresent()) {
			byte[] images = ImageUtils.decomposeImage(imageData.get().getImageData());
			return images;
		}

		return null;
	}
}
